---

- name: check if sonicpi is already installed
  stat: path="/opt/sonic-pi/app/build/gui/qt/sonic-pi"
  register: hazisonicpi
  tags: ['sonicpi']

- name: set sonic-pi dependencies to install
  set_fact:
    _packages: "{{ builds.sonicpi }}"
  tags: ['packages']

- name: Install sonic-pi dependencies
  import_role:
    name: pkg_manager
  vars:
    pkg_state: present
  tags: ['packages']

- block:
    - block:
      - name: clone sonicpi
        git:
          repo: "{{ sonicpi['git'] }}"
          dest: "{{ sonicpi['path'] }}"
          accept_hostkey: yes
          update: no
          force: no

      - name: checkout releasev3.3 branch
        shell: "git checkout {{ sonicpi['branch'] }}"
        args:
          chdir: "{{ sonicpi['path'] }}"

      - name: checkout releasev3.3 branch for fedora
        shell: "git checkout v3.3-release_fedora"
        args:
          chdir: "{{ sonicpi['path'] }}"
        when: "ansible_facts['os_family'] == 'RedHat'"

      - name: run pre-build
        shell: |
          echo -e "\n change into the app directory"
          cd app/

          echo -e "\n running linux-prebuild"

          if {{ sonicpi['prebuild'] }} ; then
            echo -e "\n prebuild success! now running linux-config"
            {{ sonicpi['compile'] }}
          else
            echo -e "\n build failed"
          fi
        args:
          chdir: "{{ sonicpi['path'] }}"
        register: sonicpi_prebuild
        failed_when: sonicpi_prebuild.failed

      - name: build sonicpi
        shell: |
          echo -e "\n change into the build directory"

          cd app/build/

          make
        args:
          chdir: "{{ sonicpi['path'] }}"
        register: sonicpi_build
        failed_when: sonicpi_build.failed


      # - debug: msg="{{ sonicpi_prebuild.stdout_lines }}"
      # - debug: msg="{{ sonicpi_build.stdout_lines }}"

      become: True
      become_user: "{{ user.name }}"

  when: not hazisonicpi.stat.exists

- name: Ensure sonic-pi config directory exists
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  with_items:
    - "{{ user.home }}/.sonic-pi"
    - "{{ user.home }}/.sonic-pi/config"

- name: Push sonic-pi helpers and snippets
  synchronize:
    src: "dots/sonic-pi/"
    dest: "{{ user.home }}/.sonic-pi/"
    recursive: yes
    mode: push
    delete: no
    rsync_opts: "--update"

- name: Push sonic-pi gui configs
  template:
    src: "dots/sonic-pi/config/{{ item }}.j2"
    dest: "{{ user.home }}/.sonic-pi/config/{{ item }}"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: '0644'
    backup: no
  with_items:
    - audio-settings.toml
    - colour-theme.properties
    - init.rb
