---

- name: gather facts
  setup:
    gather_subset:
      - os_family
      - pkg_mgr

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Set base packages to install
  set_fact:
    _packages: "{{ base }}"
  tags: ['packages']

- name: Install base packages
  import_role:
    name: pkg_manager
  vars:
    pkg_state: present

- name: enable and start firewalld
  service:
    name: firewalld
    state: started
    enabled: yes

- name: permit traffic for sshd service
  firewalld:
    service: ssh
    permanent: yes
    state: enabled
  notify:
    - "reload firewalld"

- include: ruby.yml
  tags: ['ruby']

- include: sudoers.yml
  tags: ['sudoers']

- include: perms.yml
  tags: ['perms']

- include: nfs.yml
  when: nfs_host|bool
  tags: ['nfs']

- include: docker.yml
  when: docker|bool
  tags: ['docker']

- include: libvirt.yml
  when: kvm_host|bool and libvirt is defined
  tags: ['libvirt']

- include: timeshift.yml
  tags: ['timeshift']

- include: zsh.yml
  tags: ['zsh']

- include: nvim.yml
  tags: ['nvim']

- include: ripgrep.yml
  tags: ['ripgrep']

- include: ranger.yml
  tags: ['ranger']

- include: environment.yml
  tags: ['environment']

- include: dots.yml
  tags: ['dots']

- name: push mkinitcpio configs
  copy:
    src: "etc/mkinitcpio.conf"
    dest: "/etc/mkinitcpio.conf"
    owner: root
    group: root
    mode: '0644'
    backup: yes
    directory_mode: no
  tags: ['initram']
  register: mkinit

- name: create an initial ramdisk environment.
  shell: |
    mkinitcpio -P
  when: mkinit.changed
  tags: ['initram']

- name: push default grub file
  template:
    src: etc/default/grub.j2
    dest: /etc/default/grub
    owner: root
    group: root
    mode: '644'
    backup: yes
  tags: ['grub']
  register: grubcfg

- name: remake grub
  shell: |
    grub-mkconfig -o /boot/grub/grub.cfg
  when: grubcfg.changed
  tags: ['grub']

- name: Reboot on initial setup
  shell: "shutdown -r now"
  when: grubcfg.changed
  ignore_errors: True
  tags: ['grub']

- include: firewalld.yml
  tags: ['bender']
