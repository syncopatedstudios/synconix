---

- name: starting base role
  debug:
    msg: "starting base role"

- name: gather facts
  setup:
    gather_subset:
      - os_family
      - pkg_mgr

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Set base packages to install
  set_fact:
    _packages: "{{ base }}"
  tags: ['packages']

- name: Install base packages
  import_role:
    name: pkg_manager
  vars:
    pkg_state: present

- name: enable and start firewalld
  service:
    name: firewalld
    state: started
    enabled: yes

- name: permit traffic for sshd service
  firewalld:
    service: ssh
    permanent: yes
    state: enabled
  notify:
    - "reload firewalld"

- include: filesystem.yml
  tags: ['filesystem']

- include: kernel.yml
  when: kernel is defined
  tags: ['kernel']

- include: grub.yml
  tags: ['grub']

- include: sudoers.yml
  tags: ['sudoers']

- include: realtime.yml
  tags: ['realtime']

- name: Ensure /usr/local and /opt directories are writeable
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: '2775'
  with_items:
    - "/usr/local/bin"
    - "/usr/local/lib"
    - "/usr/local/lib/soundbot"
    - "/usr/local/share"
    - "/usr/local/share/applications"
    - "{{ local_src }}"
    - "/opt"

- include: ruby.yml
  tags: ['ruby']

# - include: nfs.yml
#   when: nfs_host|bool
#   tags: ['nfs']

- include: autofs.yml
  when: autofs_client is defined
  tags: ['autofs']

- include: docker.yml
  when: docker_host|bool and docker is defined
  tags: ['docker']

- include: libvirt.yml
  when: kvm_host|bool and libvirt is defined
  tags: ['libvirt']

- include: backups.yml
  tags: ['backups']

- include: zsh.yml
  tags: ['zsh']

- include: shell.yml
  tags: ['shell']

- include: dots.yml
  tags: ['dots']

- include: nvim.yml
  tags: ['nvim']

# - include: indexer.yml
#   tags: ['indexer']
#
# - include: ranger.yml
#   tags: ['ranger']
#
# - include: nnn.yml
#   tags: ['nnn']

- include: firewalld.yml
  tags: ['firewall']

- name: configure audio system
  import_role:
    name: audio
  when: inventory_hostname in groups['desktops']

- name: configure ui
  import_role:
    name: ui
  when: inventory_hostname in groups['desktops']
  tags: ['ui']
