---

- name: check if swallow is already installed
  stat: path="/usr/local/bin/swallow"
  register: haziswallow

- name: clone i3-swallow
  git:
    repo: "{{ swallow['git'] }}"
    dest: "{{ local_src }}/swallow"
    accept_hostkey: yes
    update: no
    force: no
  when: not haziswallow.stat.exists

- name: move i3-swallow to bin dir
  shell: cp swallow /usr/local/bin/swallow
  args:
    chdir: "{{ local_src }}/swallow"
  when: not haziswallow.stat.exists

- name: Install i3ipc for Python 3
  pip:
    name: i3ipc
    executable: pip3

- block:
    - name: Ensure i3 config directory exists
      shell: |
        mkdir -pv {{ user.home }}/.config/i3
        mkdir -pv {{ user.home }}/.config/i3/scripts
        mkdir -pv {{ user.home }}/.config/jgmenu
        mkdir -pv {{ user.home }}/.config/polybar
        mkdir -pv {{ user.home }}/.config/rofi
        mkdir -pv {{ user.home }}/.config/picom
        mkdir -pv {{ user.home }}/.config/redshift
      register: i3_config_dir
      changed_when: i3_config_dir.rc != 0

    - name: Install i3 templates
      template:
        src: "dots/config/i3/config.j2"
        dest: "{{ user.home }}/.config/i3/config"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0644"
        backup: yes
      notify: restart i3
      tags: ['i3-config']

    - name: Install polybar templates
      template:
        src: "dots/config/polybar/config.j2"
        dest: "{{ user.home }}/.config/polybar/config"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0644"
        backup: yes
      tags: ['polybar']

    - name: Install i3 polybar script
      template:
        src: "dots/config/i3/scripts/polybar.sh.j2"
        dest: "{{ user.home }}/.config/i3/scripts/polybar.sh"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0755"
        backup: yes
      tags: ['polybar']

    - name: Install rofi templates
      template:
        src: "dots/config/{{ item }}.j2"
        dest: "{{ user.home }}/.config/{{ item }}"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0644"
        backup: yes
      with_items:
        - "rofi/config.rasi"
        - "rofi/docu.rasi"
      tags: ['rofi']

    - name: Install jgmenu templates
      template:
        src: "dots/config/{{ item }}.j2"
        dest: "{{ user.home }}/.config/{{ item }}"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0644"
        backup: no
      with_items:
        - "jgmenu/append.csv"
        - "jgmenu/jgmenurc"
        - "jgmenu/prepend.csv"
      tags: ['jgmenu']

    - name: Install search script
      copy:
        src: usr/local/bin/search.sh
        dest: /usr/local/bin/search.sh
        directory_mode: no
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: '0775'
        backup: no
      tags: ['search']

    - name: Install picom config
      copy:
        src: dots/.config/picom/picom.conf
        dest: "{{ user.home }}/.config/picom/picom.conf"
        directory_mode: no
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: '0644'
      tags: ['picom']

    - name: Install redshift config
      copy:
        src: dots/.config/redshift/redshift.conf
        dest: "{{ user.home }}/.config/redshift/redshift.conf"
        directory_mode: no
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: '0644'
      tags: ['redshift']

  become: True
  become_user: "{{ user.name }}"
  tags: ['dots']
