---

- name: Add user to audio groups
  user:
    name: "{{ user.name }}"
    groups: "audio"
    append: yes
  tags: ['tuning']

- name: ensure /etc/security/limits.d exists
  file:
    path: /etc/security/limits.d
    state: directory
    owner: root
    group: root
    mode: '0744'

- name: push jack limits file
  copy:
    src: etc/security/limits.d/41-realtime.conf
    dest: /etc/security/limits.d/41-realtime.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes

- name: push timer permissions file
  copy:
    src: etc/udev/rules.d/40-timer-permissions.rules
    dest: /etc/udev/rules.d/40-timer-permissions.rules
    owner: root
    group: root
    mode: "0644"

# - name: push freqset script
#   copy:
#     src: usr/local/bin/freqset.sh
#     dest: /usr/local/bin/freqset.sh
#     owner: root
#     group: root
#     mode: '0775'
#
# - name: push freqset service file
#   copy:
#     src: usr/lib/systemd/system/freqset.service
#     dest: /usr/lib/systemd/system/freqset.service
#     owner: root
#     group: root
#     mode: '0644'

- name: set vm.swappiness to 10
  sysctl: name=vm.swappiness value=10 state=present reload=yes

- name: set vm.dirty_background_bytes to 100000000
  sysctl: name=vm.dirty_background_bytes value=100000000 state=present reload=yes

- name: set fs.inotify.max_user_watches
  sysctl: name=fs.inotify.max_user_watches value=524288 state=present reload=yes

- name: dev.hpet.max-user-freq=3072
  sysctl: name=dev.hpet.max-user-freq value=3072 state=present reload=yes

# - name: just force systemd to reread configs (2.4 and above)
#   systemd: daemon_reload=yes name=freqset.service

# - name: enable freqset and cpupower service
#   systemd:
#     name: freqset
#     enabled: yes

# To use real time scheduling, you will either need to boot Linux with the “threadirqs”
# parameter or use a kernel with the realtime patch set. To always boot with the “threadirqs”
# kernel argument, add it to your grub.cfg by editing /etc/default/grub as root, adding “threadirqs”
# to the line for GRUB_CMDLINE_LINUX, then generate a new grub.cfg file.
- block:
    - name: set tuned packages to install
      set_fact:
        _packages: "{{ tuned  }}"

    - name: Ensure all the required packages are installed
      import_role:
        name: pkg_manager
      vars:
        pkg_state: present

  when: ansible_os_family != 'Raspian' and tuned is defined
  tags: ['packages']

- name: Copy over rtirq template
  template:
    src: etc/sysconfig/rtirq.j2
    dest: "{{ rtirq_dir }}"
    owner: root
    group: root
    mode: "0644"
    backup: yes
  tags: ['realtime']

- name: enable rtirq service
  systemd: name=rtirq state=started enabled=yes
