---

- name: check if nvim already exists
  stat: path="/usr/local/bin/nvim"
  register: hazinvim
  tags: ['dots']
  check_mode: no

- name: check if nvim already exists
  stat: path="/usr/bin/nvim"
  register: hazinvim
  when: not hazinvim.stat.exists
  tags: ['dots']
  check_mode: no

- block:
    - name: fetch neovim
      get_url:
        url: "https://github.com/neovim/neovim/releases/download/v0.5.0/nvim.appimage"
        dest: "{{ local_src }}"
        # validate_certs: no

    - name: set neovim appimage executable
      shell: |
        chmod +x nvim.appimage
      args:
        chdir: "{{ local_src }}"

    - name: create links to nvim
      file:
        src: "{{ local_src }}/nvim.appimage"
        dest: "/usr/local/bin/{{ item }}"
        owner: root
        group: "{{ user.group }}"
        state: link
      with_items:
        - nvim
        - vim
  when: "not hazinvim.stat.exists and ansible_os_family != 'Archlinux'"

- block:
    - name: check if nvim already exists
      stat: path="{{ user.home }}/.local/share/nvim/site/autoload/plug.vim"
      register: hazinvimplugged

    - name: ensure nvim plugged directory exists
      file:
        path: "{{ user.home }}/.local/share/nvim/site/autoload"
        state: directory
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
      check_mode: no

    - name: fetch plug.vim
      get_url:
        url: "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
        dest: "{{ user.home }}/.local/share/nvim/site/autoload/plug.vim"
      when: not hazinvimplugged.stat.exists

  become: True
  become_user: "{{ user.name }}"
  tags: ['nvim']

- name: check if bash-language-server is already installed
  stat: path="/usr/bin/bash-language-server"
  register: hazibls
  tags: ['repl']

- name: install bash-language-server
  shell: npm -g install bash-language-server
  tags: ['repl']
  when: "not hazibls.stat.exists and ansible_os_family != 'Archlinux'"
