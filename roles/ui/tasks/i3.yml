---

- name: gather facts
  setup:
    gather_subset:
      - os_family
      - pkg_mgr

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: set packages to install
  set_fact:
    _packages: "{{ ui.i3 }}"
  tags: ['packages']

- name: Install ui packages
  import_role:
    name: pkg_manager
  vars:
    pkg_state: present
  tags: ['packages']

- name: check if swallow is already installed
  stat: path="/usr/local/bin/swallow"
  register: haziswallow

- name: clone i3-swallow
  git:
    repo: "{{ swallow['git'] }}"
    dest: "{{ local_src }}/swallow"
    accept_hostkey: yes
    update: no
    force: no
  when: not haziswallow.stat.exists

- name: move i3-swallow to bin dir
  shell: cp swallow /usr/local/bin/swallow
  args:
    chdir: "{{ local_src }}/swallow"
  when: not haziswallow.stat.exists

- name: Install i3ipc for Python 3
  pip:
    name: i3ipc
    executable: pip3

- block:
    - name: Ensure i3 config directory exists
      shell: |
        mkdir -pv {{ user.home }}/.config/i3
        mkdir -pv {{ user.home }}/.config/i3/scripts
        mkdir -pv {{ user.home }}/.config/polybar
        mkdir -pv {{ user.home }}/.config/rofi
        mkdir -pv {{ user.home }}/.config/picom
        mkdir -pv {{ user.home }}/.config/redshift

    - name: Push i3 templates
      template:
        src: "dots/config/i3/config.j2"
        dest: "{{ user.home }}/.config/i3/config"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0644"
        backup: yes
      tags: ['i3']

    - name: Push polybar templates
      template:
        src: "dots/config/polybar/config.j2"
        dest: "{{ user.home }}/.config/polybar/config"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0644"
        backup: yes
      tags: ['polybar']

    - name: Push i3 polybar script
      template:
        src: "dots/config/i3/scripts/polybar.sh.j2"
        dest: "{{ user.home }}/.config/i3/scripts/polybar.sh"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0755"
        backup: yes
      tags: ['polybar']

    - name: Push rofi templates
      template:
        src: "dots/config/{{ item }}.j2"
        dest: "{{ user.home }}/.config/{{ item }}"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "0644"
        backup: yes
      with_items:
        - "rofi/config.rasi"
        - "rofi/gruvbox-common.rasi"
        - "rofi/gruvbox-dark.rasi"
      tags: ['rofi']

    - name: Copy rofi-surfraw
      copy:
        src: usr/local/bin/rofi-surfraw
        dest: /usr/local/bin/rofi-surfraw
        directory_mode: no
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: '0775'
      tags: ['rofi', 'surfraw']

    - name: Copy picom.conf
      copy:
        src: dots/config/picom/picom.conf
        dest: "{{ user.home }}/.config/picom/picom.conf"
        directory_mode: no
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: '0644'
      tags: ['picom']

    - name: Copy redshift.conf
      copy:
        src: dots/config/redshift/redshift.conf
        dest: "{{ user.home }}/.config/redshift/redshift.conf"
        directory_mode: no
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: '0644'
      notify: enable redshift
      tags: ['redshift']

  become: True
  become_user: "{{ user.name }}"
