---

- hosts: all
  gather_facts: yes
  vars:
    env_vars:
      ZSH: "{{ user.zsh }}"
      PATH: "{{ ansible_env.PATH }}:{{ path|join(':') }}"

  pre_tasks:
    - name: gather facts
      setup:
        gather_subset:
          - os_family
          - pkg_mgr

    - name: Include OS-specific variables.
      include_vars: "{{ ansible_os_family }}.yml"
  tasks:

    - name: get installed items list
      shell: |
        dnf list --installed | awk -F '.' '{ print $1}'
      register: packagelist
      ignore_errors: yes
      tags: ['test']

    - set_fact:
        installed_packages: "{{ packagelist.stdout.split('\n') }}"
      tags: ['test']

    - name: print vars
      debug:
        msg: "{{ hostvars[inventory_hostname].networkmanager }}"
      tags: ['printvars']

    - name: print vars
      debug:
        msg: "{{ (packages + common)|difference(installed_packages) }}"
      tags: ['test']

    - name: set packages var
      set_fact:
        _packages: "{{ packages | default(packages) }}"
      tags: ['test']

    - name: print fedora package array
      debug:
        var: "{{ _packages }}"
      tags: ['test']

    - name: print selinux status
      debug:
        msg: "{{ ansible_selinux['status'] }}"
      tags: ['test']

    # - name: Reboot host
    #   shell: "shutdown -r now"
    #   async: 1
    #   poll: 0
    #   ignore_errors: True
    #   register: reboot
    #   tags: ['test_reboot']
    #
    # - name: wait for reboot complete before moving on
    #   local_action:
    #     module: wait_for
    #     host: "{{ inventory_hostname }}"
    #     state: started
    #     delay: 30
    #     timeout: 120
    #   when: reboot.changed
    #   tags: ['test_reboot']

    - name: System details
      debug:
        msg: "{{ ansible_lsb['id'] }}"
      tags: ['sysinfo']
