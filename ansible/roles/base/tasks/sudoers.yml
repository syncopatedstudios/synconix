---

- name: Set user groups using variables in group_vars/all
  user:
    name: "{{ user.name }}"
    groups: "{{ admin_user }},{{ user.secondary_groups }}"
    append: yes

# https://docs.ansible.com/ansible/2.4/intro_configuration.html#pipelining
- name: Disable requiretty for the user so automation can run without interuption.
  lineinfile:
    dest: /etc/sudoers
    regexp: "^Defaults    requiretty"
    line: "Defaults:{{ user.name }}    !requiretty"
    backrefs: yes
    backup: yes
    validate: 'visudo -cf %s'
  tags: ['sudoers']

- name: Make it so the user can run sudo without a password.
  lineinfile:
    path: /etc/sudoers.d/10-installer
    regexp: '^%wheel'
    line: '{{ user.name }} ALL=(ALL:ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
    create: yes
    backup: yes
  tags: ['sudoers']

- name: Execute any action without password authentication, similar to "sudo NOPASSWD:"
  template:
    src: etc/polkit-1/rules.d/49-nopasswd_global.rules.j2
    dest: /etc/polkit-1/rules.d/49-nopasswd_global.rules
    owner: root
    group: root
    mode: '644'
    backup: no
  tags: ['polkit','sudoers']
  when: ansible_os_family == 'Archlinux' or ansible_os_family == 'RedHat'

- name: Execute any action without password authentication, similar to "sudo NOPASSWD:"
  template:
    src: etc/polkit-1/localauthority/50-local.d/disable-passwords.pkla
    dest: /etc/polkit-1/localauthority/50-local.d/disable-passwords.pkla
    owner: root
    group: root
    mode: '644'
    backup: no
  tags: ['polkit','sudoers']
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Zorin OS'
