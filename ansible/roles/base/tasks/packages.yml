---

- name: Include common package variables
  include_vars: "common.yml"
  tags: ['vars']

- block:
    - name: Determinng packages that will be installed...
      debug:
        msg: "comparing lists..."

    - name: Determinng kernel packages to be installed...
      set_fact:
        _kernel_packages: "{{ kernel|difference(package_list.stdout) }}"

    - name: Determinng system packages to be installed...
      set_fact:
        _system_packages: "{{ base.system|difference(package_list.stdout) }}"

    - name: Determinng ui packages to be installed...
      set_fact:
        _ui_packages: "{{ base.ui|difference(package_list.stdout) }}"

    - name: Determinng digital art packages to be installed...
      set_fact:
        _daw_packages: "{{ digital_art_workstation|difference(package_list.stdout) }}"

    - name: test test
      debug:
        msg: "{{ _daw_packages }}"

  tags: ['vars']

- block:
    - block:
        - name: Install kernel packages.
          aur:
            use: auto
            name: "{{ _kernel_packages }}"
            state: present
          become: True
          become_user: "{{ user.name }}"
          when: _kernel_packages|length > 0

        - name: Install Base System Packages
          aur:
            use: auto
            name: "{{ _system_packages }}"
            state: present
          when: _system_packages|length > 0

        - name: Install UI Packages
          aur:
            use: auto
            name: "{{ _ui_packages }}"
            state: present
          become: True
          become_user: "{{ user.name }}"
          when:
            - _ui_packages|length > 0
            - graphical_target|bool
          register: package_result

        - name: Install Digital Art Worksation Packages
          aur:
            use: auto
            name: "{{ _daw_packages }}"
            state: present
          become: True
          become_user: "{{ user.name }}"
          when:
            - _daw_packages|length > 0
            - graphical_target|bool
          register: package_result
          tags: ["test"]

      become: True
      become_user: "{{ user.name }}"

    - name: Install pip
      aur:
        use: auto
        name: python-pip
        state: present
      become: True
      become_user: "{{ user.name }}"

    - block:
        - name: Gather list of installed python modules
          command: pip3 list installed | awk '{print $1}'
          register: pip_list
          ignore_errors: yes

        - name: determine python modules to install
          set_fact:
            _python_modules: "{{ python|difference(pip_list.stdout) }}"

        # this task will ignore errors in check mode
        - name: Install python modules
          pip:
            name: "{{ _python_modules }}"
            executable: pip3
          ignore_errors: "{{ ansible_check_mode }}"

      when: ansible_lsb['id'] != 'Manjaro-ARM'
      tags: ['python']

  when: ansible_os_family == 'Archlinux'
  tags: ['Archlinux']
