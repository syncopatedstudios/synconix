---
- name: check whether this is an initial install
  stat:
    path: "{{ application.source.folder }}/.installed"
  register: check_installed
  tags: ['clam']

- name: "Set {{ application.name }} dependencies to install"
  set_fact:
    _packages: "{{ application.dependencies }}"
  tags: ['clam']

- name: "Install {{ application.dependencies }}"
  import_role:
    name: pkg_manager
  vars:
    pkg_state: present
  tags: ['clam']

- block:
    - name: "clone {{ application.source }}"
      git:
        repo: "{{ application.source.git }}"
        dest: "{{ application.source.folder }}"
        accept_hostkey: yes
        update: no
        force: no

    - name: "scons configure {{ application.name }}"
      shell: |
        CCFLAGS="{{ application.ccflags.x86_64 }}" \
        CPPFLAGS="{{ application.ccflags.x86_64 }}" \
        sudo scons -Q configure {{ application.flags }}
      args:
        chdir: "{{ application.source.folder }}"
      register: configure_status
      failed_when: configure_status.failed

    - name: "make {{ application.name }}"
      shell: |
        sudo scons -Q -j3 prefix=/usr/local clam_prefix=/usr/local
      args:
        chdir: "{{ application.source.folder }}"
      register: make_status
      failed_when: make_status.failed

    - name: "install {{ application.name }}"
      shell: "sudo scons -Q install"
      args:
        chdir: "{{ application.source.folder }}"
      register: make_install_status
      when: make_status.rc == 0

    - name: run ldconfig
      command: bash -lc "sudo ldconfig"
      when: make_install_status.rc == 0

    - name: touch .installed in user home directory
      file:
        path: "{{ application.source.folder }}/.installed"
        state: touch
      when: make_install_status.rc == 0

  become: True
  become_user: "{{ user.name }}"
  when: not check_installed.stat.exists
  tags: ['clam']
