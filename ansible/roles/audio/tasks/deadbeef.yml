---

- name: check if deadbeef is already installed
  stat: path="/usr/local/bin/deadbeef"
  register: hazideadbeef
  tags: ['deadbeef']

- name: set packages to install
  set_fact:
    _dev_deadbeef: "{{ development['deadbeef']|difference(installed_packages) }}"
  tags: ['packages']

- name: install deadbeef deps
  shell: "{{ ansible_pkg_mgr }} -y install {{ _dev_deadbeef | join(' ') }}"
  when: _dev_deadbeef | length > 0
  tags: ['packages']

- block:
  - name: create deadbeef plugin dir
    command: mkdir -pv "{{ user.home }}/.local/lib/deadbeef/"

  - name: clone deadbeef
    git:
      repo: "{{ deadbeef['git'] }}"
      dest: "{{ local_src }}/deadbeef"
      accept_hostkey: yes
      update: no
      force: no

  - name: run autogen
    command: bash -lc "./autogen.sh"
    args:
      chdir: "{{ local_src }}/deadbeef"

  - name: run configure
    command: bash -lc "CC=clang CXX=clang++ ./configure --with-gnu-ld --disable-lfm --disable-notify --disable-cdda --disable-cdda-paranoia --disable-ffap --disable-sid --disable-coreaudio"
    args:
      chdir: "{{ local_src }}/deadbeef"

  - name: make and install
    command: bash -lc "make && sudo make install"
    args:
      chdir: "{{ local_src }}/deadbeef"

  - name: clean up
    command: bash -lc "make distclean"
    args:
      chdir: "{{ local_src }}/deadbeef"

  become: True
  become_user: "{{ user.name }}"
  when: not hazideadbeef.stat.exists

- name: install deadbeef plugins
  synchronize:
    src: usr/local/lib/deadbeef/
    dest: /usr/local/lib/deadbeef/
    recursive: yes
    mode: push
    delete: no
    checksum: no
    perms: no
    times: yes
    # rsync_opts: "--update"
  tags: ['deadbeef']
