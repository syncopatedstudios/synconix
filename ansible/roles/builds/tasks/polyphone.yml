- include_vars:
   file: defaults/polyphone.yml
  tags: ['polyphone']

- name: check if polyphone is already installed
  shell: command -v polyphone
  register: if_polyphone_installed
  changed_when: if_polyphone_installed.rc != 0
  check_mode: no
  ignore_errors: yes

- block:
    - name: Set "{{ application.name }}" dependencies to install
      set_fact:
        _polyphone_dependencies: "{{ application.dependencies.Archlinux|difference(package_list.stdout) }}"

    - name: Install polyphone dependencies
      aur:
        use: auto
        name: "{{ _polyphone_dependencies }}"
        state: present
      become: True
      become_user: "{{ user.name }}"
      when: _polyphone_dependencies|length > 0

    - name: clone "{{ application.source }}"
      git:
        repo: "{{ application.source.git }}"
        dest: "{{ application.source.folder }}"
        accept_hostkey: yes
        update: no
        force: no
      when: application.source.git is defined

    - name: update polyphone.pro to use local libs
      shell: |
        sed -i 's/#DEFINES += USE_LOCAL_RTMIDI/DEFINES += USE_LOCAL_RTMIDI/g' polyphone.pro
        sed -i 's/#DEFINES += USE_LOCAL_STK/DEFINES += USE_LOCAL_STK/g' polyphone.pro
        sed -i 's/#DEFINES += USE_LOCAL_QCUSTOMPLOT/DEFINES += USE_LOCAL_QCUSTOMPLOT/g' polyphone.pro
      args:
        chdir: "{{ application.source.folder }}/sources"
      register: sed_status
      failed_when: sed_status.failed

    - name: configure "{{ application.name }}"
      shell: qmake-qt5
      args:
        chdir: "{{ application.source.folder }}/sources"
      register: configure_status
      failed_when: configure_status.failed

    - name: make and install "{{ application.name }}"
      shell: "make -j$(nproc) && sudo make install"
      args:
        chdir: "{{ application.source.folder }}/sources"
      register: polyphone_build
      failed_when: polyphone_build.failed

    - name: run ldconfig
      command: bash -lc "sudo ldconfig"
      when: make_install_status.rc == 0

    - name: archive build dir
      shell: |
        tar -czvf polyphone.tar.gz polyphone/ && \
        rm -rf polyphone/
      args:
        chdir: /usr/local/src

  become: True
  become_user: "{{ user.name }}"
  when: if_polyphone_installed.changed
