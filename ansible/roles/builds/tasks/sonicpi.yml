---

- name: check if sonic-pi is already installed
  shell: command -v /opt/sonic-pi/bin/sonic-pi
  register: if_sonicpi_installed
  changed_when: if_sonicpi_installed.rc != 0
  check_mode: no
  ignore_errors: yes

- block:
    - set_fact:
        _sonicpi_dependencies: "{{ builds.sonicpi|difference(package_list.stdout) }}"

    - name: Install sonic pi dependencies
      aur:
        use: auto
        name: "{{ _sonicpi_dependencies }}"
        state: present
      when: _sonicpi_dependencies|length > 0

    - name: Clone sonic-pi
      git:
        repo: "{{ sonicpi['git'] }}"
        dest: "{{ sonicpi['path'] }}"
        accept_hostkey: yes
        update: no
        force: no

    - name: Checkout releasev3.3 branch
      shell: "git checkout {{ sonicpi['branch'] }}"
      args:
        chdir: "{{ sonicpi['path'] }}"

    - name: Checkout releasev3.3 branch for fedora
      shell: "git checkout v3.3-release_fedora"
      args:
        chdir: "{{ sonicpi['path'] }}"
      when: "ansible_facts['os_family'] == 'RedHat'"

    - name: Run pre-build
      shell: |
        echo -e "\n change into the app directory"
        cd app/

        echo -e "\n running linux-prebuild"

        ./linux-prebuild.sh --build-aubio && \

        ./linux-config.sh --config Release

      args:
        chdir: "{{ sonicpi['path'] }}"
      register: sonicpi_prebuild
      failed_when: sonicpi_prebuild.failed

    - name: Build sonic-pi
      shell: |
        echo -e "\n change into the build directory"

        cd app/build/

        make
      args:
        chdir: "{{ sonicpi['path'] }}"
      register: sonicpi_build
      failed_when: sonicpi_build.failed

  become: True
  become_user: "{{ user.name }}"
  when: if_sonicpi_installed.changed

- name: Ensure sonic-pi config directory exists
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  with_items:
    - "{{ user.home }}/.sonic-pi"
    - "{{ user.home }}/.sonic-pi/config"

- name: Push sonic-pi helpers and snippets
  synchronize:
    src: "dots/sonic-pi/"
    dest: "{{ user.home }}/.sonic-pi/"
    recursive: yes
    mode: push
    delete: no
    rsync_opts: "--update"

- name: Push sonic-pi gui configs
  template:
    src: "dots/sonic-pi/config/{{ item }}.j2"
    dest: "{{ user.home }}/.sonic-pi/config/{{ item }}"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: '0644'
    backup: no
  with_items:
    - audio-settings.toml
    - colour-theme.properties
    - init.rb
