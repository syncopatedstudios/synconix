---

- hosts: all
  strategy: linear
  gather_facts: yes
  vars:
    user:
      name: b08x
      home: /home/b08x
      gnupg: /home/b08x/.gnupg
      uid: 1000
      gid: 1000
      group: b08x
      secondary_groups: "input,video,audio"
      shell: zsh
      terminal: kitty
      zsh: /usr/share/oh-my-zsh
      email: rwpannick@gmail.com
      password: $1$ynx7axf8$D/jA4ELwCCtvToD9tcmDq.
    path:
      - "{{ user.home }}/.local/bin"
      - "{{ user.home }}/.cargo/bin"
      - "{{ user.home }}/.gem/ruby/3.0.0/bin"
      - "{{ user.home }}/.rvm/rubies/ruby-3.0.0/bin"
      - "/var/lib/gems/2.7.0/bin"
      - "/usr/lib/jvm/default/bin"
      - "/opt/soundbot/bin"
      - "/opt/sonic-pi/bin"
    env_vars:
      ZSH: "{{ user.zsh }}"
      PATH: "{{ ansible_env.PATH }}:{{ path|join(':') }}"
  vars_files:
    - "vars/common.yml"
    - "{{ ansible_os_family }}.yml"

  pre_tasks:
    - name: print hostname
      debug: msg="inventory_hostname={{inventory_hostname}}"
      tags: ['inventory']

    - name: print package_manager
      debug: msg="{{ansible_pkg_mgr}}"
      tags: ['inventory']

    - name: print os_family
      debug: msg="{{ansible_os_family}}"
      tags: ['inventory']

  tasks:
    - name: Check whether this is an initial install or not.
      stat:
        path: "{{ user.home }}/.installed"
      register: check_installed

    - name: touch .installed in user home directory
      file:
        path: "{{ user.home }}/.installed"
        state: touch
      register: installed
      when: not check_installed.stat.exists
      become: True
      become_user: "{{ user.name }}"

    - name: Reboot on initial setup
      shell: |
        wall "rebooting in 1 minute"
        shutdown -r +1
      when: not check_installed.stat.exists
      ignore_errors: True

  roles:
     - { role: distro, tags: ['distro'] }
     - { role: base, tags: ['base'] }
     - { role: builds, tags: ['builds'] }
